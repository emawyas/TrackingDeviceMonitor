//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TrackingDeviceMonitor.DeviceTrackingServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TrackingDevice", Namespace="")]
    [System.SerializableAttribute()]
    public partial class TrackingDevice : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompleteRouteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DestinationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeviceSerialField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DriverIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EWField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirmWareVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GpsDateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaxSpeedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NSField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SourceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SpeedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string headingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double latitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double longitudeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompleteRoute {
            get {
                return this.CompleteRouteField;
            }
            set {
                if ((object.ReferenceEquals(this.CompleteRouteField, value) != true)) {
                    this.CompleteRouteField = value;
                    this.RaisePropertyChanged("CompleteRoute");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Destination {
            get {
                return this.DestinationField;
            }
            set {
                if ((object.ReferenceEquals(this.DestinationField, value) != true)) {
                    this.DestinationField = value;
                    this.RaisePropertyChanged("Destination");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeviceSerial {
            get {
                return this.DeviceSerialField;
            }
            set {
                if ((object.ReferenceEquals(this.DeviceSerialField, value) != true)) {
                    this.DeviceSerialField = value;
                    this.RaisePropertyChanged("DeviceSerial");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DriverId {
            get {
                return this.DriverIdField;
            }
            set {
                if ((object.ReferenceEquals(this.DriverIdField, value) != true)) {
                    this.DriverIdField = value;
                    this.RaisePropertyChanged("DriverId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EW {
            get {
                return this.EWField;
            }
            set {
                if ((object.ReferenceEquals(this.EWField, value) != true)) {
                    this.EWField = value;
                    this.RaisePropertyChanged("EW");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirmWareVersion {
            get {
                return this.FirmWareVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.FirmWareVersionField, value) != true)) {
                    this.FirmWareVersionField = value;
                    this.RaisePropertyChanged("FirmWareVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GpsDateTime {
            get {
                return this.GpsDateTimeField;
            }
            set {
                if ((object.ReferenceEquals(this.GpsDateTimeField, value) != true)) {
                    this.GpsDateTimeField = value;
                    this.RaisePropertyChanged("GpsDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaxSpeed {
            get {
                return this.MaxSpeedField;
            }
            set {
                if ((this.MaxSpeedField.Equals(value) != true)) {
                    this.MaxSpeedField = value;
                    this.RaisePropertyChanged("MaxSpeed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NS {
            get {
                return this.NSField;
            }
            set {
                if ((object.ReferenceEquals(this.NSField, value) != true)) {
                    this.NSField = value;
                    this.RaisePropertyChanged("NS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Source {
            get {
                return this.SourceField;
            }
            set {
                if ((object.ReferenceEquals(this.SourceField, value) != true)) {
                    this.SourceField = value;
                    this.RaisePropertyChanged("Source");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Speed {
            get {
                return this.SpeedField;
            }
            set {
                if ((this.SpeedField.Equals(value) != true)) {
                    this.SpeedField = value;
                    this.RaisePropertyChanged("Speed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string heading {
            get {
                return this.headingField;
            }
            set {
                if ((object.ReferenceEquals(this.headingField, value) != true)) {
                    this.headingField = value;
                    this.RaisePropertyChanged("heading");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double latitude {
            get {
                return this.latitudeField;
            }
            set {
                if ((this.latitudeField.Equals(value) != true)) {
                    this.latitudeField = value;
                    this.RaisePropertyChanged("latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double longitude {
            get {
                return this.longitudeField;
            }
            set {
                if ((this.longitudeField.Equals(value) != true)) {
                    this.longitudeField = value;
                    this.RaisePropertyChanged("longitude");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="DeviceTrackingServiceReference.IWCFService")]
    public interface IWCFService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/getAllTrackingDevices", ReplyAction="http://tempuri.org/IWCFService/getAllTrackingDevicesResponse")]
        TrackingDeviceMonitor.DeviceTrackingServiceReference.TrackingDevice[] getAllTrackingDevices();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/getAllTrackingDevices", ReplyAction="http://tempuri.org/IWCFService/getAllTrackingDevicesResponse")]
        System.Threading.Tasks.Task<TrackingDeviceMonitor.DeviceTrackingServiceReference.TrackingDevice[]> getAllTrackingDevicesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/getTrackingDevice", ReplyAction="http://tempuri.org/IWCFService/getTrackingDeviceResponse")]
        TrackingDeviceMonitor.DeviceTrackingServiceReference.TrackingDevice getTrackingDevice(string serial);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/getTrackingDevice", ReplyAction="http://tempuri.org/IWCFService/getTrackingDeviceResponse")]
        System.Threading.Tasks.Task<TrackingDeviceMonitor.DeviceTrackingServiceReference.TrackingDevice> getTrackingDeviceAsync(string serial);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWCFServiceChannel : TrackingDeviceMonitor.DeviceTrackingServiceReference.IWCFService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WCFServiceClient : System.ServiceModel.ClientBase<TrackingDeviceMonitor.DeviceTrackingServiceReference.IWCFService>, TrackingDeviceMonitor.DeviceTrackingServiceReference.IWCFService {
        
        public WCFServiceClient() {
        }
        
        public WCFServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WCFServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WCFServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WCFServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public TrackingDeviceMonitor.DeviceTrackingServiceReference.TrackingDevice[] getAllTrackingDevices() {
            return base.Channel.getAllTrackingDevices();
        }
        
        public System.Threading.Tasks.Task<TrackingDeviceMonitor.DeviceTrackingServiceReference.TrackingDevice[]> getAllTrackingDevicesAsync() {
            return base.Channel.getAllTrackingDevicesAsync();
        }
        
        public TrackingDeviceMonitor.DeviceTrackingServiceReference.TrackingDevice getTrackingDevice(string serial) {
            return base.Channel.getTrackingDevice(serial);
        }
        
        public System.Threading.Tasks.Task<TrackingDeviceMonitor.DeviceTrackingServiceReference.TrackingDevice> getTrackingDeviceAsync(string serial) {
            return base.Channel.getTrackingDeviceAsync(serial);
        }
    }
}
